/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Index */
        get: operations["index__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health Check */
        get: operations["health_check_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfl-picks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Picks */
        get: operations["get_picks_nfl_picks_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfl-pick-results": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Pick Results */
        get: operations["get_pick_results_nfl_pick_results_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nfl-update-picks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Train Model And Update Picks */
        post: operations["train_model_and_update_picks_nfl_update_picks_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nba-first-basket-upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Nba First Basket Upload */
        post: operations["nba_first_basket_upload_nba_first_basket_upload_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/nba-first-basket-picks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Picks */
        get: operations["get_picks_nba_first_basket_picks_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** GameResult */
        GameResult: {
            /** Season */
            season: number;
            /** Week */
            week: string;
            /** Home Team */
            home_team: string;
            /** Away Team */
            away_team: string;
            /** Home Score */
            home_score: number;
            /** Away Score */
            away_score: number;
            /** Home Score Pred */
            home_score_pred: number;
            /** Away Score Pred */
            away_score_pred: number;
            /** Spread Pred */
            spread_pred: number;
            /** Spread Line */
            spread_line: number;
            /** True Spread */
            true_spread: number;
            /** Spread Play */
            spread_play: string;
            /** Spread Win Prob */
            spread_win_prob: number;
            /** Spread Lock */
            spread_lock: number;
            /** Correct Spread Play */
            correct_spread_play: string | null;
            /** Spread Win */
            spread_win: number | null;
            /** Total Pred */
            total_pred: number;
            /** Total Line */
            total_line: number;
            /** True Total */
            true_total: number;
            /** Total Play */
            total_play: string;
            /** Total Win Prob */
            total_win_prob: number;
            /** Total Lock */
            total_lock: number;
            /** Correct Total Play */
            correct_total_play: string | null;
            /** Total Win */
            total_win: number | null;
            /** Year Week */
            year_week: string;
            /** Game Id */
            game_id: string;
            /** Date Time */
            date_time: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** NBAFirstBasketPick */
        NBAFirstBasketPick: {
            /** Date */
            date: string;
            /** Player Name */
            player_name: string;
            /** Team */
            team: string;
            /** Fb Model Prob */
            fb_model_prob: number;
            /** Fb Model Odds */
            fb_model_odds: number;
            /** Odds */
            odds: number;
            /** Sportsbook */
            sportsbook: string;
            /** Units */
            units: number;
        };
        /** PickResponse */
        PickResponse: {
            /** Season */
            season: number;
            /** Week */
            week: string;
            /** Home Team */
            home_team: string;
            /** Away Team */
            away_team: string;
            /** Home Score Pred */
            home_score_pred: number;
            /** Away Score Pred */
            away_score_pred: number;
            /** Spread Pred */
            spread_pred: number;
            /** Spread Line */
            spread_line: number;
            /** Spread Play */
            spread_play: string;
            /** Spread Win Prob */
            spread_win_prob: number;
            /** Spread Lock */
            spread_lock: number;
            /** Total Pred */
            total_pred: number;
            /** Total Line */
            total_line: number;
            /** Total Play */
            total_play: string;
            /** Total Win Prob */
            total_win_prob: number;
            /** Total Lock */
            total_lock: number;
            /** Game Id */
            game_id: string;
            /** Year Week */
            year_week: string;
            /** Date Time */
            date_time: string;
        };
        /** PickResultsData */
        PickResultsData: {
            /** Predicted Games */
            predicted_games: number;
            /** Spread Wins */
            spread_wins: number;
            /** Spread Losses */
            spread_losses: number;
            /** Spread Pushes */
            spread_pushes: number;
            /** Spread Win Pct */
            spread_win_pct: number;
            /** Spread Lock Predictions */
            spread_lock_predictions: number;
            /** Spread Lock Wins */
            spread_lock_wins: number;
            /** Spread Lock Losses */
            spread_lock_losses: number;
            /** Spread Lock Pushes */
            spread_lock_pushes: number;
            /** Spread Lock Win Pct */
            spread_lock_win_pct: number;
            /** Total Wins */
            total_wins: number;
            /** Total Losses */
            total_losses: number;
            /** Total Pushes */
            total_pushes: number;
            /** Total Win Pct */
            total_win_pct: number;
            /** Total Lock Predictions */
            total_lock_predictions: number;
            /** Total Lock Wins */
            total_lock_wins: number;
            /** Total Lock Losses */
            total_lock_losses: number;
            /** Total Lock Pushes */
            total_lock_pushes: number;
            /** Total Lock Win Pct */
            total_lock_win_pct: number;
        };
        /** PickResultsResponse */
        PickResultsResponse: {
            data: components["schemas"]["PickResultsData"];
            /** Games */
            games: components["schemas"]["GameResult"][];
        };
        /** UpdatePicksData */
        UpdatePicksData: {
            /** Write Time */
            write_time: string;
            /** Week */
            week: number;
            /** Season */
            season: number;
            /** Environment */
            environment: string;
            /** Client Name */
            client_name: string;
            /** Runtime */
            runtime: number;
            /** Pick Changes */
            pick_changes: number;
            /** Pick Changes Games */
            pick_changes_games: string[];
            /** Play Changes */
            play_changes: number;
            /** Play Changes Games */
            play_changes_games: string[];
            /** Updates Skipped */
            updates_skipped: number;
            /** Picks Num */
            picks_num: number;
            /** Database Updated */
            database_updated: boolean;
        };
        /** UpdatePicksRequest */
        UpdatePicksRequest: {
            /** Season */
            season: number;
            /** Week */
            week: number;
        };
        /** UpdatePicksResponse */
        UpdatePicksResponse: {
            /** Status */
            status: string;
            /** Message */
            message: string;
            data?: components["schemas"]["UpdatePicksData"] | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    index__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    health_check_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_picks_nfl_picks_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PickResponse"][];
                };
            };
        };
    };
    get_pick_results_nfl_pick_results_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PickResultsResponse"];
                };
            };
        };
    };
    train_model_and_update_picks_nfl_update_picks_post: {
        parameters: {
            query?: never;
            header: {
                /** @description Identifier for the requesting entity (lambda, jake, etc) */
                "client-name": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdatePicksRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdatePicksResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    nba_first_basket_upload_nba_first_basket_upload_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NBAFirstBasketPick"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_picks_nba_first_basket_picks_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NBAFirstBasketPick"][];
                };
            };
        };
    };
}
